{% doc %}
  @prompt
    Create a featured product block with specific color variant selected (blue). Customer can only select size. This block should display specific color variant. Include settings to choose which product and variant should be selected. THe rest must be like featured product block but without vendor and quantity

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-featured-product-{{ ai_gen_id }} {
    display: block;
    text-decoration: none;
    color: inherit;
  }

  .ai-featured-product-container-{{ ai_gen_id }} {
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
    padding: {{ block.settings.padding }}px;
    max-width: {{ block.settings.max_width }}px;
    margin: 0 auto;
  }

  .ai-featured-product-layout-{{ ai_gen_id }} {
    display: grid;
    gap: {{ block.settings.content_gap }}px;
    align-items: center;
  }

  .ai-featured-product-layout-{{ ai_gen_id }}--row {
    grid-template-columns: 1fr 1fr;
  }

  .ai-featured-product-layout-{{ ai_gen_id }}--column {
    grid-template-columns: 1fr;
  }

  .ai-featured-product-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: 1;
    overflow: hidden;
    border-radius: {{ block.settings.image_border_radius }}px;
  }

  .ai-featured-product-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-featured-product-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-featured-product-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-featured-product-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 8px 12px;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 4px;
    font-size: 12px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  .ai-featured-product-content-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .ai-featured-product-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    font-weight: 600;
    color: {{ block.settings.text_color }};
    margin: 0;
    line-height: 1.3;
  }

  .ai-featured-product-price-{{ ai_gen_id }} {
    font-size: {{ block.settings.price_size }}px;
    color: {{ block.settings.price_color }};
    font-weight: 500;
  }

  .ai-featured-product-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    color: {{ block.settings.text_color }};
    line-height: 1.5;
    opacity: 0.8;
  }

  .ai-featured-product-form-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .ai-featured-product-variants-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .ai-featured-product-variant-label-{{ ai_gen_id }} {
    font-size: 14px;
    font-weight: 500;
    color: {{ block.settings.text_color }};
  }

  .ai-featured-product-variant-options-{{ ai_gen_id }} {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .ai-featured-product-variant-option-{{ ai_gen_id }} {
    position: relative;
  }

  .ai-featured-product-variant-input-{{ ai_gen_id }} {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
  }

  .ai-featured-product-variant-button-{{ ai_gen_id }} {
    padding: 8px 16px;
    border: 1px solid {{ block.settings.variant_border_color }};
    background-color: {{ block.settings.variant_bg_color }};
    color: {{ block.settings.text_color }};
    border-radius: {{ block.settings.variant_border_radius }}px;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 14px;
  }

  .ai-featured-product-variant-input-{{ ai_gen_id }}:checked + .ai-featured-product-variant-button-{{ ai_gen_id }} {
    background-color: {{ block.settings.variant_selected_bg_color }};
    border-color: {{ block.settings.variant_selected_border_color }};
    color: {{ block.settings.variant_selected_text_color }};
  }

  .ai-featured-product-variant-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.variant_hover_bg_color }};
  }

  .ai-featured-product-add-button-{{ ai_gen_id }} {
    padding: 14px 24px;
    background-color: {{ block.settings.button_bg_color }};
    color: {{ block.settings.button_text_color }};
    border: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: {{ block.settings.button_text_size }}px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s ease;
    text-align: center;
  }

  .ai-featured-product-add-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_bg_color }};
  }

  .ai-featured-product-add-button-{{ ai_gen_id }}:disabled {
    background-color: #ccc;
    cursor: not-allowed;
  }

  .ai-featured-product-unavailable-{{ ai_gen_id }} {
    padding: 12px;
    background-color: #f8f8f8;
    border-radius: 4px;
    text-align: center;
    color: #666;
    font-style: italic;
  }

  @media screen and (max-width: 749px) {
    .ai-featured-product-layout-{{ ai_gen_id }}--row {
      grid-template-columns: 1fr;
    }

    .ai-featured-product-container-{{ ai_gen_id }} {
      padding: {{ block.settings.padding | times: 0.7 }}px;
    }
  }
{% endstyle %}

<featured-product-{{ ai_gen_id }}
  class="ai-featured-product-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.featured_product %}
    {% assign product = block.settings.featured_product %}
    {% assign selected_variant = block.settings.selected_variant %}
    {% if selected_variant == blank %}
      {% assign selected_variant = product.selected_or_first_available_variant %}
    {% endif %}<div class="ai-featured-product-container-{{ ai_gen_id }}">
      <div class="ai-featured-product-layout-{{ ai_gen_id }} ai-featured-product-layout-{{ ai_gen_id }}--{{ block.settings.layout }}">
        <div class="ai-featured-product-image-wrapper-{{ ai_gen_id }}">
          {% if selected_variant.featured_image %}
            <img
              src="{{ selected_variant.featured_image | image_url: width: 800 }}"
              alt="{{ selected_variant.featured_image.alt | escape }}"
              class="ai-featured-product-image-{{ ai_gen_id }}"
              loading="lazy"
              width="{{ selected_variant.featured_image.width }}"
              height="{{ selected_variant.featured_image.height }}"
            >
          {% elsif product.featured_image %}
            <img
              src="{{ product.featured_image | image_url: width: 800 }}"
              alt="{{ product.featured_image.alt | escape }}"
              class="ai-featured-product-image-{{ ai_gen_id }}"
              loading="lazy"
              width="{{ product.featured_image.width }}"
              height="{{ product.featured_image.height }}"
            >
          {% else %}
            <div class="ai-featured-product-placeholder-{{ ai_gen_id }}">
              {{ 'product-apparel-1' | placeholder_svg_tag }}
            </div>
          {% endif %}
        </div>

        <div class="ai-featured-product-content-{{ ai_gen_id }}">
          <h3 class="ai-featured-product-title-{{ ai_gen_id }}">{{ product.title }}</h3>
          
          <div class="ai-featured-product-price-{{ ai_gen_id }}">
            {% if selected_variant.compare_at_price > selected_variant.price %}
              <span style="text-decoration: line-through; opacity: 0.6;">{{ selected_variant.compare_at_price | money }}</span>
              <span>{{ selected_variant.price | money }}</span>
            {% else %}
              <span>{{ selected_variant.price | money }}</span>
            {% endif %}
          </div>

          {% if block.settings.show_description and product.description != blank %}
            <div class="ai-featured-product-description-{{ ai_gen_id }}">
              {{ product.description | strip_html | truncate: 120 }}
            </div>
          {% endif %}

          {% if product.available %}
            {% form 'product', product, class: 'ai-featured-product-form-' | append: ai_gen_id %}
              <input type="hidden" name="id" value="{{ selected_variant.id }}">
              
              {% assign size_option = product.options_with_values | where: 'name', 'Size' | first %}
              
              {% if size_option and size_option.values.size > 1 %}
                <div class="ai-featured-product-variants-{{ ai_gen_id }}">
                  <label class="ai-featured-product-variant-label-{{ ai_gen_id }}">Size</label>
                  <div class="ai-featured-product-variant-options-{{ ai_gen_id }}">
                    {% for size_value in size_option.values %}
                      {% assign size_variant = product.variants | where: 'option2', size_value | where: 'option1', selected_variant.option1 | first %}
                      {% if size_variant == blank %}
                        {% assign size_variant = product.variants | where: 'option1', size_value | where: 'option2', selected_variant.option2 | first %}
                      {% endif %}
                      {% if size_variant == blank %}
                        {% assign size_variant = product.variants | where: 'option3', size_value | where: 'option1', selected_variant.option1 | first %}
                      {% endif %}
                      
                      {% if size_variant %}
                        <div class="ai-featured-product-variant-option-{{ ai_gen_id }}">
                          <input
                            type="radio"
                            name="variant-id"
                            value="{{ size_variant.id }}"
                            id="variant-{{ ai_gen_id }}-{{ size_variant.id }}"
                            class="ai-featured-product-variant-input-{{ ai_gen_id }}"
                            {% if size_variant.id == selected_variant.id %}checked{% endif %}
                            {% unless size_variant.available %}disabled{% endunless %}
                          >
                          <label
                            for="variant-{{ ai_gen_id }}-{{ size_variant.id }}"
                            class="ai-featured-product-variant-button-{{ ai_gen_id }}"
                          >
                            {{ size_value }}
                          </label>
                        </div>
                      {% endif %}
                    {% endfor %}
                  </div>
                </div>
              {% endif %}

              <button
                type="submit"
                class="ai-featured-product-add-button-{{ ai_gen_id }}"
                {% unless selected_variant.available %}disabled{% endunless %}
              >
                {% if selected_variant.available %}
                  {{ block.settings.button_text }}
                {% else %}Sold out
                {% endif %}
              </button>
            {% endform %}
          {% else %}
            <div class="ai-featured-product-unavailable-{{ ai_gen_id }}">
              This product is currently unavailable
            </div>
          {% endif %}
        </div>
      </div>
    </div>
  {% else %}
    <div class="ai-featured-product-container-{{ ai_gen_id }}">
      <div class="ai-featured-product-layout-{{ ai_gen_id }} ai-featured-product-layout-{{ ai_gen_id }}--{{ block.settings.layout }}">
        <div class="ai-featured-product-image-wrapper-{{ ai_gen_id }}">
          <div class="ai-featured-product-placeholder-{{ ai_gen_id }}">
            {{ 'product-apparel-1' | placeholder_svg_tag }}
            <div class="ai-featured-product-empty-state-{{ ai_gen_id }}">
              Select a product and variant
            </div>
          </div>
        </div><div class="ai-featured-product-content-{{ ai_gen_id }}">
          <h3 class="ai-featured-product-title-{{ ai_gen_id }}">Product title</h3>
          <div class="ai-featured-product-price-{{ ai_gen_id }}">$0.00</div>
          <div class="ai-featured-product-unavailable-{{ ai_gen_id }}">
            Configure this block by selecting a product and variant
          </div>
        </div>
      </div>
    </div>
  {% endif %}
</featured-product-{{ ai_gen_id }}><script>
(function() {
  class FeaturedProduct{{ai_gen_id}} extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.setupVariantSelection();
    }

    setupVariantSelection() {
      const variantInputs = this.querySelectorAll('.ai-featured-product-variant-input-{{ ai_gen_id }}');
      const form = this.querySelector('.ai-featured-product-form-{{ ai_gen_id }}');
      const hiddenInput = form?.querySelector('input[name="id"]');
      const addButton = this.querySelector('.ai-featured-product-add-button-{{ ai_gen_id }}');

      variantInputs.forEach(input => {
        input.addEventListener('change', () => {
          if (input.checked && hiddenInput) {
            hiddenInput.value = input.value;
            
            const variant = this.getVariantById(input.value);
            if (variant && addButton) {
              if (variant.available) {
                addButton.textContent = '{{ block.settings.button_text }}';
                addButton.disabled = false;
              } else {
                addButton.textContent = 'Sold out';
                addButton.disabled = true;
              }
            }
          }
        });
      });
    }

    getVariantById(variantId) {
      return window.productVariants?.find(v => v.id == variantId);
    }
  }

  customElements.define('featured-product-{{ ai_gen_id }}', FeaturedProduct{{ai_gen_id}});
})();
</script>

{% schema %}
{
  "name": "Featured product",
  "settings": [
    {
      "type": "header",
      "content": "Product selection"
    },
    {
      "type": "product",
      "id": "featured_product",
      "label": "Product"
    },
    {
      "type": "text",
      "id": "selected_variant",
      "label": "Variant ID",
      "info": "Enter the specific variant ID for the color you want to display"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "layout",
      "label": "Layout",
      "options": [
        {
          "value": "row",
          "label": "Side by side"
        },
        {
          "value": "column",
          "label": "Stacked"
        }
      ],
      "default": "row"
    },
    {
      "type": "range",
      "id": "max_width",
      "min": 300,
      "max": 1200,
      "step": 50,
      "unit": "px",
      "label": "Maximum width",
      "default": 800
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Padding",
      "default": 30
    },
    {
      "type": "range",
      "id": "content_gap",
      "min": 10,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Content gap",
      "default": 30
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "checkbox",
      "id": "show_description",
      "label": "Show product description",
      "default": true
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Add to cart"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 36,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 24
    },
    {
      "type": "range",
      "id": "price_size",
      "min": 14,
      "max": 28,
      "step": 2,
      "unit": "px",
      "label": "Price size",
      "default": 20
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 14
    },
    {
      "type": "range",
      "id": "button_text_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Button text size",
      "default": 16
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Button background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_bg_color",
      "label": "Button hover background",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Variant options"
    },
    {
      "type": "color",
      "id": "variant_bg_color",
      "label": "Variant background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "variant_border_color",
      "label": "Variant border",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "variant_hover_bg_color",
      "label": "Variant hover background",
      "default": "#f5f5f5"
    },
    {
      "type": "color",
      "id": "variant_selected_bg_color",
      "label": "Selected variant background",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "variant_selected_border_color",
      "label": "Selected variant border",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "variant_selected_text_color",
      "label": "Selected variant text",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Border radius"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Container border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 6
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 4
    },
    {
      "type": "range",
      "id": "variant_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Variant border radius",
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "Featured product"
    }
  ]
}
{% endschema %}